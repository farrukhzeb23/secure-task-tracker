services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: secure_task_tracker_db
    environment:
      POSTGRES_DB: secure_task_tracker_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d secure_task_tracker_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  # FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: secure_task_tracker_app
    environment:
      - DB_NAME=secure_task_tracker_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - SECRET_KEY=your-secret-key-here
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ALGORITHM=HS256
      - ENVIRONMENT=production
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - app_network
    restart: unless-stopped

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: secure_task_tracker_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - app_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge